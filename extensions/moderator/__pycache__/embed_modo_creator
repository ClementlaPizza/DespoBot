# embed_modo_creator
import discord
from discord.ext import commands
import random
import datetime
import time

class EmbedCreator(commands.Cog):
	def __init__(self, bot):
		self.bot = bot
		self.embedcreator = EmbedCreator()
		pass

# Creation
	@commands.command()
	@commands.has_role(491958001314299905)
	async def embed(self, ctx):
		line = self.embedcreator.getMessage(ctx.message.content)
		await ctx.message.delete()
		if not line:
			return
		url_test = "https://media.discordapp.net/attachments/851643141101715486/917777406687854642/logo_despo_noel.png"
		self.embedcreator.setTitle(line)
		self.embedcreator.setDescription(line)
		self.embedcreator.setColorRandom()
		self.embedcreator.setAuthor("Bob", icon=url_test)
		self.embedcreator.setField("Yop", "yip", True)
		self.embedcreator.setField("Yop2", "yip2", True)
		self.embedcreator.setFooter("footer test", url_test)
		self.embedcreator.setImage(url_test, 500, 500)
		self.embedcreator.setThumbnail(url_test, 500, 500)
		self.embedcreator.setTimestamp(ctx.message.created_at)
		dico = self.embedcreator.getDico()
		# print(dico)
		embed = discord.Embed.from_dict(dico)
		# print(url_test)
		send = await ctx.send(embed=embed)
		print(send.id)
		with open('idmessage.txt', 'w') as f:
			f.write(str(send.id))
			pass
		pass
# Edit
	@commands.command()
	@commands.has_role(491958001314299905)
	async def edit(self, ctx):
		with open('idmessage.txt', 'r') as f:
			idmessage = int(f.readline())
			print(idmessage)
			pass
		pass

		nomdelamodif = "Modif 1 : titre"

		await ctx.message.delete()
		message = await ctx.channel.fetch_message(idmessage)
		embed_dict = message.embeds[0].to_dict().copy()
		self.embedcreator.setTitle(nomdelamodif)
		self.embedcreator.setDescription(nomdelamodif + " (description)")
		dico = self.embedcreator.getDico()
		embed = discord.Embed.from_dict(dico)
		await message.edit(embed=embed)


def setup(bot):
	bot.add_cog(EmbedModoCreator(bot))





















class EmbedCreator(object):
	"""docstring for EmbedCreator"""
	def __init__(self, arg=None):
		super(EmbedCreator, self).__init__()
		self.arg = arg
		self.initVar()
# INIT
	def initVar(self):
		self.title = ""
		self.description = ""
		self.color = 1007636
		self.author = "" 
		self.author_url = "https://github.com/ClementlaPizza/"
		self.author_icon = ""
		self.field = []
		self.footer = ""
		self.image = ""
		self.thumbnail = ""
		self.timestamp = ""
		self.message_id = ""
		pass

# GET
	def getDico(self, message = None):
		dico_embed = {}
		dico_embed["title"] = self.title
		dico_embed["description"] = self.description
		dico_embed["color"] = self.color
		dico_embed["author"] = self.author
		dico_embed["fields"] = self.field
		dico_embed["footer"] = self.footer
		dico_embed["image"] = self.image
		dico_embed["thumbnail"] = self.thumbnail
		dico_embed["timestamp"] = self.timestamp
		self.initVar()
		return dico_embed


	def getMessage(self, message):
		if " " in message: # Full message
			return message.split(" ",1)[1]
		elif "\n" in message: # Description
			return " \n" + message.split("\n",1)[1]
		return False

# SET
	def setTitle(self, title):
		if "\n" in title:
			title = title.split("\n")[0]
		self.title = title
		pass

	def setDescription(self, description):
		if "\n" in description:
			description = description.split("\n",1)[1]
			self.description = description
		pass

	def setColor(self, color):
		self.color = color
		print(self.color)
		pass

	def setColorRandom(self):
		random_color = lambda: random.randint(0,255)
		color = '%02X%02X%02X' % (random_color(),random_color(),random_color())
		self.color = int(color, 16)
		pass

	def setAuthor(self, author, url=None, icon=None, **kwargs):
		if url:
			self.author_url = url
			pass
		if icon:
			self.author_icon = icon
			pass
		url = kwargs.get("url",None)
		if url:
			self.author_url = url
			pass
		icon = kwargs.get("icon",None)
		if icon:
			self.author_icon = icon
			pass
		self.author = {"name":author,"url":self.author_url,"icon_url":self.author_icon}
		pass

	def setField(self, name, value, inline):
		self.field.append({"name":name, "value":value, "inline":inline})
		# print(self.field)
		pass

	def setFooter(self, text, icon_url=None):
		self.footer = {"text":text,"icon_url":icon_url}
		pass

	def setImage(self, url, height=None, width=None):
		# print(f"{height}=hauteur, {width}=largeur")
		if (height and not width) or (not height and width):
			return False
		self.image = {"url":url, "height":height, "width":width}
		pass

	def setThumbnail(self, url, height=None, width=None):
		# print(f"{height}=hauteur, {width}=largeur")
		if (height and not width) or (not height and width):
			return False
		self.thumbnail = {"url":url, "height":height, "width":width}
		pass

	def setTimestamp(self, timevar):
		# timevar = 1640114573
		# print(f"timevar = {timevar} = {type(timevar)}")
		if type(timevar) is datetime.datetime:
			# print(f"datetime.datetime")
			self.timestamp = str(timevar)
			pass
		elif type(timevar) is int:
			# print(f"int")
			self.timestamp = str(datetime.datetime.fromtimestamp(timevar))
			# print(self.timestamp)
			pass
		pass